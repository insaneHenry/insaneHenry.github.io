<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【视频】000webhost使用cloudflare SSL 转载自YouTube]]></title>
    <url>%2F2018%2F08%2F03%2Fcloudflare%2F%E3%80%90%E8%A7%86%E9%A2%91%E3%80%91000webhost%E4%BD%BF%E7%94%A8cloudflare-SSL-%E8%BD%AC%E8%BD%BD%E8%87%AAYouTube%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>cloudflare</category>
      </categories>
      <tags>
        <tag>-cloudflare -000webhost</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[教程:如何导出telegram表情]]></title>
    <url>%2F2018%2F08%2F02%2Ftelegram%2F%E6%95%99%E7%A8%8B-%E5%A6%82%E4%BD%95%E5%AF%BC%E5%87%BAtelegram%E8%A1%A8%E6%83%85%2F</url>
    <content type="text"><![CDATA[转自91yun https://www.91yun.co/archives/32561telegram 的表情真的是太多了 , 因为收藏十分方便 , 网友发一张图你就能收集到一整套 . 真的好想倒到微信用啊 . 那要怎么导出呢 . 在 Telegram 里添加机器人@stickerset2packbot 开始选择表情输入 /newpack 系统就会提示你可以发送表情了把你想要导出的表情通通发给它 . 一次能发 200 张发完后输入 /finish 系统就会自动开始开始打包了打包结束 , 就可以直接下载打包的 zip 文件拉解压开 zip 文件 , 看看是不是你要的表情都是一张张 jpg 图片拉 PS: 因为要下载打包的 zip 文件 , 所以 建议在电脑客户端或者 web 端 进行 (https://web.telegram.org/) 导入微信我目前用的方法是先把图片保存到手机 .( 可以通过网盘传输到手机 ) 然后在微信里面添加相册的图片为表情]]></content>
      <categories>
        <category>telegram</category>
      </categories>
      <tags>
        <tag>-telegram -表情导出</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于hexo标签和分类的问题]]></title>
    <url>%2F2018%2F07%2F20%2FHexo%E6%95%99%E7%A8%8B%2F%E5%85%B3%E4%BA%8Ehexo%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[打开站点配置文件 的配置 \hexo_config.yml找到 Category &amp; Tagdefault_category: articlecategory_map: {test: testCate}tag_map: {test: testTag} permalink: :category/:title.html ` 现在就可以访问到别名 testCate 了]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
      <tags>
        <tag>-hexo -标签 -分类</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo可用图床]]></title>
    <url>%2F2018%2F07%2F19%2FHexo%E6%95%99%E7%A8%8B%2Fhexo%E5%8F%AF%E7%94%A8%E5%9B%BE%E5%BA%8A%2F</url>
    <content type="text"><![CDATA[https://sm.ms/ http://upload.otar.im/ 当然，用imgur也是极好的！]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
      <tags>
        <tag>-hexo -图床</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建hexo时，报错记录及解决]]></title>
    <url>%2F2018%2F07%2F19%2FHexo%E6%95%99%E7%A8%8B%2F%E6%90%AD%E5%BB%BAhexo%E6%97%B6%EF%BC%8C%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95%E5%8F%8A%E8%A7%A3%E5%86%B3%2F</url>
    <content type="text"><![CDATA[搭建hexo时，报错记录及解决 转载▼http://blog.sina.com.cn/s/blog_a03baecd0102xp7i.html标签： hexo git nodejs npm 分类： 计算机 1.问题：执行 $ npm install hexo –save 时报错：npm WARN saveError ENOENT: no such file or directory, open ‘D:\SherryZhou\Homepage\package.json’D:\SherryZhou\Homepage`– hexo@3.6.0 npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\chokidar\node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”win32”,”arch”:”x64”})npm WARN enoent ENOENT: no such file or directory, open ‘D:\SherryZhou\Homepage\package.json’npm WARN Homepage No descriptionnpm WARN Homepage No repository field.npm WARN Homepage No README datanpm WARN Homepage No license field. 原因：项目目录下没有package.json这个文件。可以使用npm init -f命令生成一下解决：$ npm init -f (或npm init -y)npm WARN using –force I sure hope you know what you are doing.Wrote to D:\SherryZhou\Homepage\hexotext\package.json:{ “name”: “hexotext”, “version”: “1.0.0”, “main”: “index.js”, “scripts”: { “test”: “echo \”Error: no test specified\” &amp;&amp; exit 1” }, “keywords”: [], “author”: “”, “license”: “ISC”, “description”: “”} 2.问题：执行$ hexo init 时报错：zhoumiaomiao@HOIT101 MINGW64 /d/SherryZhou/Homepage/hexotext$ hexo initbash: hexo: command not found 原因：hexo没有配置全局变量解决：找一下hexo装在哪里了，配置一下 3.问题：在上一步寻找环境变量时发现hexo安装目录找不到了，重新装：zhoumiaomiao@HOIT101 MINGW64 /d/SherryZhou/Hexo$ npm install hexo-cli -g 之后报错：npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\he xo-cli\node_modules\chokidar\node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@ 1.1.3: wanted {“os”:”darwin”,”arch”:”any”} (current: {“os”:”win32”,”arch”:”x64”} ) 原因：出现这个警告的原因好像时因为用的不是mac系统，这条忽略就好。解决：安装的时候发现了之前的默认安装目录：C:\Users\zhoumiaomiao\AppData\Roaming\npm\hexo -&gt; C:\Users\zhoumiaomiao\AppData\ Roaming\npm\node_modules\hexo-cli\bin\hexo 配一下环境变量：D:\SherryZhou\Homepage\hexotext\node_modules\hexo\binhexo -v就可以了 4.问题：hexo init时报错：FATAL D:\SherryZhou\Homepage\hexotext not empty, please run hexo init on an empty folder and then copy your files into itFATAL Something’s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: target not empty原因：这个文件夹不为空解决：新建一个文件夹执行hexo init即可（这个文件夹我起名叫hexospace作为本地hexo根目录），执行成功：INFO Start blogging with Hexo! 5.问题：执行$ ssh-keygen -t rsa -C “5832xxxxx@qq.com“时提示：Generating public/private rsa key pair. Enter file in which to save the key (/c/Users/zhoumiaomiao/.ssh/id_rsa): 。。。。。。。。原因：这里我以前设置过git，但是手残覆盖了以前的公钥，重新生成了。解决：只能重新配置一遍git，顺便发现git也要设置代理，需要很长的时间来重新配置。 6.执行$ hexo new post “TestTitle”时报错：FATAL bad indentation of a mapping entry at line 82, column 9: branch: master ^ YAMLException: bad indentation of a mapping entry at line 82, column 9:​ branch: master请确认您使用空格进行缩进（Soft tab），并确认冒号后有一个空格。原因：在配置所有的_config.yml文件时（包括theme中的），在所有的冒号:后边都要加一个空格，否则执行hexo命令会报错。http://blog.csdn.net/zoeyyeoz/article/details/51143613解决：将_config.yml文件最后加的内容改成以下样式就不报错了： DeploymentDocs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:SherrymmZhou/SherrymmZhou.github.io.git branch: master 7.执行$ hexo d 时报错： ERROR Deployer not found: git原因：没有提前安装一个扩展解决：npm install --save hexo-deployer-git]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
      <tags>
        <tag>-hexo -报错</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Hexo+Github一步步搭建属于自己的博客（基础）]]></title>
    <url>%2F2018%2F07%2F16%2FHexo%E6%95%99%E7%A8%8B%2F%E4%BD%BF%E7%94%A8Hexo%2BGithub%E4%B8%80%E6%AD%A5%E6%AD%A5%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[已剪辑自: https://www.cnblogs.com/fengxiongZz/p/7707219.html 前言：电脑系统为window 10专业版，64位 相关步骤： 1、安装Node.js和配置好Node.js环境，打开cmd命令行，成功界面如下 2、安装Git和配置好Git环境，安装成功的象征就是在电脑上任何位置鼠标右键能够出现如下两个选择注意：一般出于安全考虑，只有在Git Bash Here中才能进行Git的相关操作。如果需要在cmd命令行里调用Git，那么就要配置电脑的环境变量Path，或者在安装的时候选择use Git from the Windows Command Prompt。这个可有可无，影响不大，成功配置的界面如图 3、Github账户注册和新建项目，项目必须要遵守格式：账户名.github.io，不然接下来会有很多麻烦。并且需要勾选Initialize this repository with a README 在建好的项目右侧有个settings按钮，点击它，向下拉到GitHub Pages，你会看到那边有个网址，访问它，你将会惊奇的发现该项目已经被部署到网络上，能够通过外网来访问它。 4、安装Hexo，在自己认为合适的地方创个文件夹，我是在D盘建了一个blog文件夹。然后通过命令行进入到该文件夹里面 #### 输入npm install hexo -g，开始安装Hexo 输入hexo -v，检查hexo是否安装成功输入hexo init，初始化该文件夹（有点漫长的等待。。。）看到后面的“Start blogging with Hexo！”，激动有木有！！！！！输入npm install，安装所需要的组件输入hexo g，首次体验Hexo 输入hexo s，开启服务器，访问该网址，正式体验Hexo问题：假如页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入“hexo server -p 端口号”来改变端口号那么出现如下图就成功了 5、将Hexo与Github page联系起来，设置Git的user name和email（如果是第一次的话）上图是在其文件夹里面鼠标右键，点击Git Base Here。这里“feng”可以替换成自己的用户名，邮箱可以替换成自己的邮箱输入cd ~/.ssh，检查是否由.ssh的文件夹输入ls，列出该文件下的内容。下图说明存在 输入ssh-keygen -t rsa -C “929762930@qq.com”，连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh）。输入eval “$(ssh-agent -s)”，添加密钥到ssh-agent 再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent 登录Github，点击头像下的settings，添加ssh 新建一个new ssh key，将id_rsa.pub文件里的内容复制上去 输入ssh -T git@github.com，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决首先，清除所有的key-pairssh-add -Drm -r ~/.ssh删除你在github中的public-key重新生成ssh密钥对ssh-keygen -t rsa -C “xxx@xxx.com“接下来正常操作在github上添加公钥public-key:1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板2、在github上添加公钥时，直接复制即可3、保存测试：在终端 ssh -T git@github.com 6、配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值（在末尾） repo值是你在github项目里的ssh（右下角） ####7、新建一篇博客，在cmd执行命令：hexo new post “博客名” #### 这时候在文件夹_posts目录下将会看到已经创建的文件 在生成以及部署文章之前，需要安装一个扩展：npm install hexo-deployer-git –save 使用编辑器编好文章，那么就可以使用命令：hexo d -g，生成以及部署了 部署成功后访问你的地址：http://用户名.github.io。那么将看到生成的文章]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
      <tags>
        <tag>-hexo -搭建</tag>
      </tags>
  </entry>
</search>
